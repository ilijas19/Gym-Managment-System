openapi: 3.0.0
info:
  title: 13-Gym-Managment-System
  version: 1.0.0
servers:
  - url: https://gym-managment-system-api.onrender.com/api/v1
tags:
  - name: Auth
  - name: Admin
  - name: Staff (members)
  - name: Staff (trainers)
  - name: Trainer
paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: Staff Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: ilijas19
                password: ilijas19
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /auth/trainerLogin:
    post:
      tags:
        - Auth
      summary: Trainer Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: trainer1
                password: trainer1
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /auth/logout:
    get:
      tags:
        - Auth
      summary: Logout
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /auth/showMe:
    get:
      tags:
        - Auth
      summary: Show Current User
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /admin:
    post:
      tags:
        - Admin
      summary: Create Staff Member
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Ilija Gocic
                username: ilijas19
                password: ilijas19
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin
      summary: Get All Staff Members
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /admin/{id}:
    get:
      tags:
        - Admin
      summary: Get Staff Member
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Staff member ID
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Admin
      summary: Update Staff Member
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Staff member ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: georgee
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin
      summary: Delete Staff Member
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Staff member ID
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /admin/resetPassword/{id}:
    patch:
      tags:
        - Admin
      summary: Reset Staff Password
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Staff member ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                password: george
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /staff/member/:
    post:
      tags:
        - Staff (members)
      summary: Register Member
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                fullName: ilija gocicc
                email: ilijagocic1971@gmail.com
                membershipPlan: individual
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Staff (members)
      summary: Get All Members
      parameters:
        - in: query
          name: fullName
          schema:
            type: string
          required: false
          description: Filter members by full name (supports regex matching)
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /staff/member/{id}:
    get:
      tags:
        - Staff (members)
      summary: Member Check In
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Member ID
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Staff (members)
      summary: Delete Member
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Member ID
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /staff/renew/{id}:
    patch:
      tags:
        - Staff (members)
      summary: Renew Membership
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Member ID
      requestBody:
        content: {}
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /staff/trainer/:
    post:
      tags:
        - Staff (trainers)
      summary: Register Trainer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: trainer1
                username: trainer1
                password: trainer1
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Staff (trainers)
      summary: Get All Trainers
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /staff/trainer/{id}:
    get:
      tags:
        - Staff (trainers)
      summary: Get Single Trainer
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Trainer ID
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Staff (trainers)
      summary: Delete Trainer
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Trainer ID
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /trainer/:
    post:
      tags:
        - Trainer
      summary: Add New Client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 67176b7c4dbee29f1541728d
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Trainer
      summary: Get All Clients
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /trainer/{id}:
    delete:
      tags:
        - Trainer
      summary: Remove Client
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Client ID
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Trainer
      summary: Find Single Client
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Client ID
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    /trainer/sendMail/{id}:
    post:
      tags:
        - Trainer
      summary: Send Mail To Client
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Client ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                message: "Hey this is your trainer"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
